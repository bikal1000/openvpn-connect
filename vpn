#!/bin/bash

# Author: Bikal Shrestha
# Date: March 9, 2023

set -euo pipefail

# Set constants
readonly AUTH_FILE=~/.openvpn-auth
readonly CLIENT_CONFIG=/etc/openvpn/client.ovpn

# Define functions
start_openvpn() {
  printf "Starting OpenVPN service...\n"
  sudo systemctl start openvpn
}

check_auth_file() {
  if [ ! -f "$AUTH_FILE" ]; then
    return 1
  fi
  return 0
}

prompt_credentials() {
  printf "Enter your username: "
  read -r USERNAME

  printf "Enter your password: "
  read -rs PASSWORD

  printf "\nEnter your TOTP secret: "
  read -rs TOTP_SECRET

  printf "%s\n%s\n%s" "$USERNAME" "$PASSWORD" "$TOTP_SECRET" > "$AUTH_FILE"
}

authenticate() {
  readarray -t AUTH < "$AUTH_FILE"
  USERNAME="${AUTH[0]}"
  PASSWORD="${AUTH[1]}"
  TOTP_SECRET="${AUTH[2]}"

  # Generate OTP using oathtool
  OTP=$(oathtool --totp --base32 "$TOTP_SECRET")

  # Concatenate OTP with the password
  PASSWORD_WITH_OTP="${PASSWORD}${OTP}"

  TEMP_AUTH_FILE=$(mktemp)
  printf "%s\n%s" "$USERNAME" "$PASSWORD_WITH_OTP" > "$TEMP_AUTH_FILE"

  printf "Authenticating with OpenVPN service...\n"
  sudo openvpn --config "$CLIENT_CONFIG" --auth-user-pass "$TEMP_AUTH_FILE"

  rm "$TEMP_AUTH_FILE"
}

# Start OpenVPN service
start_openvpn

# Check if authentication file exists, prompt user if not
if check_auth_file; then
  printf "Reading saved username, password, and TOTP secret...\n"
else
  prompt_credentials
fi

# Authenticate with OpenVPN service using saved credentials
authenticate